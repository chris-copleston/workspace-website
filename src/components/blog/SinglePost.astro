---
import { Icon } from 'astro-icon/components';

import { Image } from 'astro:assets';
import PostTags from '~/components/blog/Tags.astro';
import SocialShare from '~/components/common/SocialShare.astro';

import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate } from '~/utils/utils';

import type { Post } from '~/types';

export interface Props {
  post: Post;
  url: string | URL;
}

const { post, url } = Astro.props;
const isRemoteImage = typeof post.image === 'string' && 
  (post.image.startsWith('http://') || post.image.startsWith('https://'));

---

<section class="my-8 px-4 sm:px-6 mx-auto max-w-4xl">
  <article>
    <div>
      <div class="flex items-center gap-4 mb-1 border-b-8 dark:border-slate-800">
        <h1 class="pb-3 font-bold font-heading text-4xl md:text-5xl leading-tighter tracking-tighter">{post.title}</h1>
      </div>
      
      <div class="flex items-center text-muted dark:text-slate-400 text-sm mb-8">
        <Icon name="tabler:clock" class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400" />
        <time datetime={String(post.publishDate)} class="inline-block ml-1 mr-3">{getFormattedDate(post.publishDate)}</time>
        {post.author && (
          <>
            <Icon name="tabler:user" class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400" />
            <span class="inline-block ml-1 mr-3">{post.author}</span>
          </>
        )}
        {post.category && (
          <>
            <Icon name="tabler:folder" class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400" />
            <a class="hover:underline inline-block ml-1 mr-3" href={getPermalink(post.category.slug, 'category')}>
              {post.category.title}
            </a>
          </>
        )}
        {post.readingTime && (
          <>
            <Icon name="tabler:book" class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400" />
            <span class="inline-block ml-1">{post.readingTime} min read</span>
          </>
        )}
      </div>

      {post.excerpt && (
        <div class="-mt-1 mb-8">
          <p class="text-xl text-gray-600 dark:text-gray-400">{post.excerpt}</p>
        </div>
      )}

      {post.image && (
        <div class="mb-8">
          {isRemoteImage ? (
            <Image
              src={post.image}
              alt={post?.title || ''}
              width={1060}
              height={506}
              class="w-full max-h-[506px] object-cover rounded-lg shadow-lg bg-gray-400 dark:bg-slate-700"
              widths={[400, 1060]}
              sizes="(max-width: 1060px) 400px, 1060px"
              loading="eager"
              decoding="async"
            />
          ) : (
            <img 
              src={post.image} 
              alt={post?.title || ''} 
              class="w-full max-h-[506px] object-cover rounded-lg shadow-lg bg-gray-400 dark:bg-slate-700"
              width="1060"
              height="506"
              loading="eager"
              decoding="async"
            />
          )}
        </div>
      )}
    </div>

    <div class="prose prose-lg max-w-4xl dark:prose-invert dark:prose-headings:text-slate-300 prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-blue-600 dark:prose-a:text-blue-400 prose-img:rounded-md prose-img:shadow-lg mt-8">
      <slot />
    </div>

    <div class="mt-8 flex justify-between flex-col sm:flex-row">
      <PostTags tags={post.tags} class="mr-5 rtl:mr-0 rtl:ml-5" />
      <SocialShare url={url} text={post.title} class="mt-5 sm:mt-1 align-middle text-gray-500 dark:text-slate-600" />
    </div>
  </article>
</section>
